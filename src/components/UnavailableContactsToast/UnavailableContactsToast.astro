---
interface Props {
  dataToast: string;
  duration?: number;
  message?: string;
}

const {
  dataToast,
  duration = 8,
  message = "En este momento, no hay contactos disponibles. Contáctenos dejándonos su información.",
} = Astro.props;

const parsedDuration = duration + "s";
---

<style define:vars={{ parsedDuration }}>
  .toast {
    z-index: -1;
  }

  .toast-animated:not(:target) {
    animation-name: toastAnimation;
    animation-timing-function: ease-in-out;
    animation-duration: var(--parsedDuration);
    display: block;
    z-index: 40;
  }

  @keyframes toastAnimation {
    0%,
    100% {
      opacity: 0;
    }

    35%,
    65% {
      opacity: 1;
    }
  }
</style>

<div data-toast={dataToast} class="toast toast-top toast-end opacity-0 z-40">
  <div class="alert alert-error shadow-lg">
    <div>
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="stroke-current flex-shrink-0 h-6 w-6"
        fill="none"
        viewBox="0 0 24 24"
        ><path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z"
        ></path></svg
      >
      <span>{message}</span>
    </div>
  </div>
</div>
